{"version":3,"sources":["additional_fields/tester.js","additional_fields/developer.js","additional_fields/project_manager.js","createLink.js","Register.js","Admin.js","Edit.js","App.js","index.js"],"names":["Tester","props","htmlFor","type","id","className","placeholder","value","this","state","detail1","onChange","setInputValue","detail2","checked","detail3","setCheckboxValue","React","Component","Developer","ProjectManager","createLink","endpoint","Register","validateEmail","email","test","event","setState","target","clearDetailsValues","sendData","formData","FormData","fieldsToSend","forEach","field","append","fetch","method","mode","body","then","clearAllInputs","showSendingDataSuccessMessage","sendingDataSuccess","setTimeout","name","surname","description","position","submit","validate","validated","requiredFields","startSubmit","preventDefault","additionalFields","onClick","Admin","getData","response","json","data","users","deleteUser","window","confirm","map","user","index","detail_1","detail_2","detail_3","to","Edit","history","push","match","params","userId","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e86d4b32.chunk.js","sourcesContent":["import '../App.css';\nimport React from 'react';\n\nclass Tester extends React.Component{\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <div>\n            <label htmlFor=\"name\">Systemy testujące</label>\n            <input type=\"text\"\n                   id={\"detail1\"}\n                   className={\"form-control\"}\n                   placeholder={\"Systemy testujące\"}\n                   value={this.props.state.detail1}\n                   onChange={this.props.setInputValue}\n            />\n\n            <label htmlFor=\"name\">Systemy raportowe</label>\n            <input type=\"text\"\n                   id={\"detail2\"}\n                   className={\"form-control\"}\n                   placeholder={\"Systemy raportowe\"}\n                   value={this.props.state.detail2}\n                   onChange={this.props.setInputValue}\n            />\n\n            <label htmlFor=\"name\">zna selenium</label>\n            <input type=\"checkbox\"\n                   className={\"form-control\"}\n                   id={\"detail3\"}\n                   checked={this.props.state.detail3}\n                   onChange={this.props.setCheckboxValue}\n            />\n        </div>\n    );\n  }\n}\n\nexport default Tester;\n","import '../App.css';\nimport React from 'react';\n\nclass Developer extends React.Component{\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <div>\n            <label htmlFor=\"name\">Środowiska IDE</label>\n            <input type=\"text\"\n                   id={\"detail1\"}\n                   className={\"form-control\"}\n                   placeholder={\"Środowiska IDE\"}\n                   value={this.props.state.detail1}\n                   onChange={this.props.setInputValue}\n            />\n\n            <label htmlFor=\"name\">Języki programowania</label>\n            <input type=\"text\"\n                   id={\"detail2\"}\n                   className={\"form-control\"}\n                   placeholder={\"Języki programowania\"}\n                   value={this.props.state.detail2}\n                   onChange={this.props.setInputValue}\n            />\n\n            <label htmlFor=\"name\">zna mysql</label>\n            <input type=\"checkbox\"\n                   className={\"form-control\"}\n                   id={\"detail3\"}\n                   checked={this.props.state.detail3}\n                   onChange={this.props.setCheckboxValue}\n            />\n        </div>\n    );\n  }\n}\n\nexport default Developer;\n","import '../App.css';\nimport React from 'react';\n\nclass ProjectManager extends React.Component{\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n        <div>\n            <label htmlFor=\"name\">Metodologie prowadzenia projektów</label>\n            <input type=\"text\"\n                   id={\"detail1\"}\n                   className={\"form-control\"}\n                   placeholder={\"Metodologie prowadzenia projektów\"}\n                   value={this.props.state.detail1}\n                   onChange={this.props.setInputValue}\n            />\n\n            <label htmlFor=\"name\">Systemy raportowe</label>\n            <input type=\"text\"\n                   id={\"detail2\"}\n                   className={\"form-control\"}\n                   placeholder={\"Systemy raportowe\"}\n                   value={this.props.state.detail2}\n                   onChange={this.props.setInputValue}\n            />\n\n            <label htmlFor=\"name\">zna scrum</label>\n            <input type=\"checkbox\"\n                   className={\"form-control\"}\n                   id={\"detail3\"}\n                   checked={this.props.state.detail3}\n                   onChange={this.props.setCheckboxValue}\n            />\n        </div>\n    );\n  }\n}\n\nexport default ProjectManager;\n","export default function createLink(endpoint) {\n    return \"http://127.0.0.1:8000/\" + endpoint;\n}","import './App.css';\nimport React from 'react';\nimport Tester from './additional_fields/tester'\nimport Developer from './additional_fields/developer'\nimport ProjectManager from './additional_fields/project_manager'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport createLink from \"./createLink\";\n\nclass Register extends React.Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      surname: \"\",\n      email: \"\",\n      description: \"\",\n      position: \"0\",\n      detail1: \"\",\n      detail2: \"\",\n      detail3: false,\n      submit: false,\n      requiredFields: ['name', 'surname', 'email'],\n      sendingDataSuccess: false,\n      fieldsToSend: ['name',\n        'surname',\n        'email',\n        'description',\n        'position',\n        'detail1',\n        'detail2',\n        'detail3']\n    }\n  }\n\n  validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  setInputValue = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  setCheckboxValue = () => {\n    if(!this.state.detail3){\n      this.setState({\n        detail3: true\n      })\n    } else {\n      this.setState({\n        detail3: false\n      })\n    }\n  }\n\n  clearDetailsValues = () => {\n    this.setState({\n      detail1: \"\",\n      detail2: \"\",\n      detail3: false\n    })\n  }\n\n  sendData = () => {\n    let formData = new FormData();\n\n    this.state.fieldsToSend.forEach(field => {\n      formData.append(field, this.state[field])\n    })\n    fetch(createLink('save_data'), {\n      method: 'POST',\n      mode: 'cors',\n      body: formData\n    }).then(() => {\n      this.clearAllInputs();\n      this.showSendingDataSuccessMessage();\n    })\n  }\n\n  showSendingDataSuccessMessage = () => {\n    this.setState({\n      sendingDataSuccess: true\n    }, () => {\n      setTimeout(() => {\n        this.setState({\n          sendingDataSuccess: false\n        })\n      }, 3000)\n    })\n  }\n\n  clearAllInputs = () => {\n    this.setState({\n      name: \"\",\n      surname: \"\",\n      email: \"\",\n      description: \"\",\n      position: \"0\",\n      detail1: \"\",\n      detail2: \"\",\n      detail3: false,\n      submit: false\n    })\n  }\n\n  validate = (event) => {\n    let validated = true;\n    this.state.requiredFields.forEach((field) => {\n      if(this.state[field] === \"\"){\n        validated = false;\n      }\n    })\n\n    if(!this.validateEmail(this.state.email)){\n      validated = false;\n    }\n\n    if(this.state.position === \"0\"){\n      validated = false;\n    }\n    return validated;\n  }\n\n  startSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      submit: true\n    }, () => {\n      if(this.validate()){\n        this.sendData();\n      }\n    })\n  }\n\n  render() {\n    let additionalFields = null;\n    switch (this.state.position) {\n      case \"tester\":\n        additionalFields = <Tester state={this.state}\n                                   setInputValue={this.setInputValue}\n                                   setCheckboxValue={this.setCheckboxValue}\n        />;\n        break;\n      case \"developer\":\n        additionalFields = <Developer state={this.state}\n                                   setInputValue={this.setInputValue}\n                                   setCheckboxValue={this.setCheckboxValue}\n        />;\n        break;\n      case \"projectManager\":\n        additionalFields = <ProjectManager state={this.state}\n                                   setInputValue={this.setInputValue}\n                                   setCheckboxValue={this.setCheckboxValue}\n        />;\n        break;\n\n\n\n    }\n    return (\n        <div className=\"App\">\n          <form className={\"form-width\"}>\n            <label htmlFor=\"name\">Imię</label>\n            <input type=\"text\"\n                   id={\"name\"}\n                   className={\"form-control\"}\n                   placeholder={\"Imię\"}\n                   value={this.state.name}\n                   onChange={this.setInputValue}\n            />\n            {(this.state.submit && this.state.name === \"\") && <p className={'text-danger message-font'}>Proszę uzupełnić pole!</p>}\n\n            <label htmlFor=\"name\">Nazwisko</label>\n            <input type=\"text\"\n                   id={\"surname\"}\n                   className={\"form-control\"}\n                   placeholder={\"Nazwisko\"}\n                   value={this.state.surname}\n                   onChange={this.setInputValue}\n            />\n            {(this.state.submit && this.state.surname === \"\") && <p className={'text-danger message-font'}>Proszę uzupełnić pole!</p>}\n\n            <label htmlFor=\"name\">E-mail</label>\n            <input type=\"email\"\n                   id={\"email\"}\n                   className={\"form-control\"}\n                   placeholder={\"E-mail\"}\n                   value={this.state.email}\n                   onChange={this.setInputValue}\n            />\n            {(this.state.submit && this.state.email === \"\") && <p className={'text-danger message-font'}>Proszę uzupełnić pole!</p>}\n            {(this.state.submit && this.state.email !== \"\" && !this.validateEmail(this.state.email)) && <p className={'text-danger message-font'}>Błędny adres e-mail!</p>}\n\n            <label htmlFor=\"name\">Opis</label>\n            <input type=\"text\"\n                   id={\"description\"}\n                   className={\"form-control\"}\n                   placeholder={\"Opis\"}\n                   value={this.state.description}\n                   onChange={this.setInputValue}\n            />\n\n            <label htmlFor=\"name\">Stanowisko</label>\n            <select id=\"position\"\n                    className={\"form-control\"}\n                    value={this.state.position}\n                    onChange={(event) => {this.setInputValue(event); this.clearDetailsValues();}}\n            >\n              <option value=\"0\">Wybierz</option>\n              <option value=\"tester\">Tester</option>\n              <option value=\"developer\">Developer</option>\n              <option value=\"projectManager\">Project manager</option>\n            </select>\n            {(this.state.submit && this.state.position === \"0\") && <p className={'text-danger message-font'}>Proszę uzupełnić pole!</p>}\n\n            {additionalFields}\n            <button className={\"btn btn-primary margin-top\"} onClick={this.startSubmit}>Wyślij</button>\n            {this.state.sendingDataSuccess && <p className={'text-success'}>Dane wysłane poprawnie</p>}\n          </form>\n        </div>\n    );\n  }\n}\n\nexport default Register;\n","import './App.css';\nimport React from 'react';\nimport Tester from './additional_fields/tester'\nimport Developer from './additional_fields/developer'\nimport ProjectManager from './additional_fields/project_manager'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport createLink from \"./createLink\";\n\nclass Admin extends React.Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      users: null\n    }\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = () => {\n    fetch(createLink('get_data'), {\n      method: 'GET',\n      mode: 'cors',\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        users: data.users\n      })\n    })\n  }\n\n  deleteUser = (id) => {\n    if(window.confirm(\"Na pewno chcesz usunąć tego użytkownika?\")) {\n      fetch(createLink(`delete_user/${id}`), {\n        method: 'POST',\n        mode: 'cors',\n      }).then(() => {\n        this.getData();\n      })\n    }\n  }\n\n  render() {\n    if (this.state.users === null) {\n      return null\n    } else {\n      return (\n          <div className={'App-admin'}>\n              {this.state.users.map((user, index) => {\n                return(\n                    <div className={'admin-user'} key={index}>\n                    <p>Imię: {user.name}</p>\n                    <p>Nazwisko: {user.surname}</p>\n                    <p>Email: {user.email}</p>\n                    <p>Opis: {user.description}</p>\n                    <p>Stanowisko: {user.position}</p>\n                    <p>Detail1: {user.detail_1}</p>\n                    <p>Detail2: {user.detail_2}</p>\n                    <p>Detail3: {user.detail_3 ? <span>Tak</span> : <span>Nie</span>}</p>\n                      <Link to={`/admin/edit/${user.id}`} className={'btn btn-success btn-with-margins'}>Edytuj</Link>\n                      <button onClick={() => {this.deleteUser(user.id)}} className={'btn btn-danger btn-with-margins'}>Usuń</button>\n                      <hr/>\n                    </div>\n                )\n              })}\n          </div>\n\n      );\n    }\n  }\n}\n\nexport default Admin;\n","import './App.css';\nimport React from 'react';\nimport Tester from './additional_fields/tester'\nimport Developer from './additional_fields/developer'\nimport ProjectManager from './additional_fields/project_manager'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n    useHistory\n} from \"react-router-dom\";\nimport createLink from \"./createLink\";\n\nclass Edit extends React.Component{\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: null,\n      name: \"\",\n      surname: \"\",\n      email: \"\",\n      description: \"\",\n      position: \"0\",\n      detail1: \"\",\n      detail2: \"\",\n      detail3: false,\n      submit: false,\n      requiredFields: ['name', 'surname', 'email'],\n      sendingDataSuccess: false,\n      fieldsToSend: ['name',\n        'surname',\n        'email',\n        'description',\n        'position',\n        'detail1',\n        'detail2',\n        'detail3']\n    }\n  }\n\n  componentDidMount() {\n      fetch(createLink(`get_user/${this.props.match.params.userId}`), {\n        method: 'GET',\n        mode: 'cors',\n      }).then(response => response.json()).then(data => {\n        let user = data.user[0];\n        if(user.position === \"\"){\n          user.position = \"0\";\n        }\n        this.setState({\n          id: user.id,\n          name: user.name,\n          surname: user.surname,\n          email: user.email,\n          description: user.description,\n          position: user.position,\n          detail1: user.detail_1,\n          detail2: user.detail_2,\n          detail3: user.detail_3,\n        })\n      })\n  }\n\n  validateEmail = (email) => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  setInputValue = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  setCheckboxValue = () => {\n    if(!this.state.detail3){\n      this.setState({\n        detail3: true\n      })\n    } else {\n      this.setState({\n        detail3: false\n      })\n    }\n  }\n\n  clearDetailsValues = () => {\n    this.setState({\n      detail1: \"\",\n      detail2: \"\",\n      detail3: false\n    })\n  }\n\n  sendData = () => {\n    let formData = new FormData();\n    this.state.fieldsToSend.forEach(field => {\n      formData.append(field, this.state[field])\n    })\n    fetch(createLink(`edit_user/${this.state.id}`), {\n      method: 'POST',\n      mode: 'cors',\n      body: formData\n    }).then(() => {\n      this.props.history.push(\"/admin\");\n    })\n  }\n\n  validate = (event) => {\n    let validated = true;\n    this.state.requiredFields.forEach((field) => {\n      if(this.state[field] === \"\"){\n        validated = false;\n      }\n    })\n\n    if(!this.validateEmail(this.state.email)){\n      validated = false;\n    }\n\n    if(this.state.position === \"0\"){\n      validated = false;\n    }\n    return validated;\n  }\n\n  startSubmit = (event) => {\n    event.preventDefault();\n    this.setState({\n      submit: true\n    }, () => {\n      if(this.validate()){\n        this.sendData();\n      }\n    })\n  }\n\n  render() {\n    let additionalFields = null;\n    switch (this.state.position) {\n      case \"tester\":\n        additionalFields = <Tester state={this.state}\n                                   setInputValue={this.setInputValue}\n                                   setCheckboxValue={this.setCheckboxValue}\n        />;\n        break;\n      case \"developer\":\n        additionalFields = <Developer state={this.state}\n                                   setInputValue={this.setInputValue}\n                                   setCheckboxValue={this.setCheckboxValue}\n        />;\n        break;\n      case \"projectManager\":\n        additionalFields = <ProjectManager state={this.state}\n                                   setInputValue={this.setInputValue}\n                                   setCheckboxValue={this.setCheckboxValue}\n        />;\n        break;\n\n\n\n    }\n    return (\n        <div className=\"App\">\n          <form className={\"form-width\"}>\n            <label htmlFor=\"name\">Imię</label>\n            <input type=\"text\"\n                   id={\"name\"}\n                   className={\"form-control\"}\n                   placeholder={\"Imię\"}\n                   value={this.state.name}\n                   onChange={this.setInputValue}\n            />\n            {(this.state.submit && this.state.name === \"\") && <p className={'text-danger message-font'}>Proszę uzupełnić pole!</p>}\n\n            <label htmlFor=\"name\">Nazwisko</label>\n            <input type=\"text\"\n                   id={\"surname\"}\n                   className={\"form-control\"}\n                   placeholder={\"Nazwisko\"}\n                   value={this.state.surname}\n                   onChange={this.setInputValue}\n            />\n            {(this.state.submit && this.state.surname === \"\") && <p className={'text-danger message-font'}>Proszę uzupełnić pole!</p>}\n\n            <label htmlFor=\"name\">E-mail</label>\n            <input type=\"email\"\n                   id={\"email\"}\n                   className={\"form-control\"}\n                   placeholder={\"E-mail\"}\n                   value={this.state.email}\n                   onChange={this.setInputValue}\n            />\n            {(this.state.submit && this.state.email === \"\") && <p className={'text-danger message-font'}>Proszę uzupełnić pole!</p>}\n            {(this.state.submit && this.state.email !== \"\" && !this.validateEmail(this.state.email)) && <p className={'text-danger message-font'}>Błędny adres e-mail!</p>}\n\n            <label htmlFor=\"name\">Opis</label>\n            <input type=\"text\"\n                   id={\"description\"}\n                   className={\"form-control\"}\n                   placeholder={\"Opis\"}\n                   value={this.state.description}\n                   onChange={this.setInputValue}\n            />\n\n            <label htmlFor=\"name\">Stanowisko</label>\n            <select id=\"position\"\n                    className={\"form-control\"}\n                    value={this.state.position}\n                    onChange={(event) => {this.setInputValue(event); this.clearDetailsValues();}}\n            >\n              <option value=\"0\">Wybierz</option>\n              <option value=\"tester\">Tester</option>\n              <option value=\"developer\">Developer</option>\n              <option value=\"projectManager\">Project manager</option>\n            </select>\n            {(this.state.submit && this.state.position === \"0\") && <p className={'text-danger message-font'}>Proszę uzupełnić pole!</p>}\n\n            {additionalFields}\n            <button className={\"btn btn-primary margin-top\"} onClick={this.startSubmit}>Wyślij</button>\n            {this.state.sendingDataSuccess && <p className={'text-success'}>Dane wysłane poprawnie</p>}\n          </form>\n        </div>\n    );\n  }\n}\n\nexport default Edit;\n","import './App.css';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Register from './Register'\nimport Admin from \"./Admin\";\nimport Edit from \"./Edit\";\n\nfunction App(){\n  return(\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to={\"/\"}>Rejestracja</Link>\n              </li>\n              <li>\n                <Link to={\"/admin\"}>Panel administracyjny</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <Switch>\n          <Route path={\"/admin/edit/:userId\"} component={Edit}></Route>\n          <Route path={\"/admin\"} component={Admin}></Route>\n          <Route path={\"/\"} component={Register}></Route>\n        </Switch>\n      </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}